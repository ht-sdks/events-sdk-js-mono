name: Deploy Releases

on:
  release:
    types: [published]

env:
  HUSKY: 0
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
  PROD_BUCKET: 'hightouch-events'

permissions:
  id-token: write # allows the JWT to be requested from GitHub's OIDC provider
  contents: read # This is required for actions/checkout

jobs:
  deploy-core:
    uses: ./.github/workflows/deploy-npm.template.yml
    with:
      name: core
      working-directory: packages/core
    secrets: inherit

  deploy-browser:
    if: "startsWith( github.ref_name, 'browser@' )"
    name: Deploy Browser to NPM and CDN
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source branch
        uses: actions/checkout@v4

      - name: Get tag version
        id: get_tag_version
        env:
          TAG: ${{ github.ref_name }}
        run: echo "PATH_VERSION=${TAG##browser@}" >> $GITHUB_OUTPUT

      - name: Get package version
        id: get_package_version
        run: echo "PACKAGE_VERSION=$(jq -r '.version' < ./packages/browser/package.json)" >> $GITHUB_OUTPUT

      - name: Check package.json version
        shell: bash
        env:
          PATH_VERSION: '${{ steps.get_tag_version.outputs.PATH_VERSION }}'
          PACKAGE_VERSION: '${{ steps.get_package_version.outputs.PACKAGE_VERSION }}'
        run: |
          node -e 'process.env.PATH_VERSION === process.env.PACKAGE_VERSION ? process.exit() : process.exit(1)'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_PROD_ACCOUNT_ID }}:role/${{ secrets.AWS_PROD_S3_SYNC_ROLE }}
          aws-region: us-east-1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Build
        env:
          PATH_VERSION: '${{ steps.get_tag_version.outputs.PATH_VERSION }}'
        working-directory: packages/browser
        run: |
          npx turbo run build

      - name: Release browser to CDN
        env:
          PATH_VERSION: '${{ steps.get_tag_version.outputs.PATH_VERSION }}'
        working-directory: packages/browser
        run: |
          npm run release:cdn

      - name: Publish browser package to NPM
        env:
          HUSKY: 0
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: packages/browser
        run: |
          npm publish --access=public

  deploy-node:
    uses: ./.github/workflows/deploy-npm.template.yml
    with:
      name: node
      working-directory: packages/node
    secrets: inherit

  deploy-consent-tools:
    uses: ./.github/workflows/deploy-npm.template.yml
    with:
      name: consent-tools
      working-directory: packages/consent/consent-tools
    secrets: inherit

  deploy-consent-wrapper-onetrust:
    uses: ./.github/workflows/deploy-npm.template.yml
    with:
      name: consent-wrapper-onetrust
      working-directory: packages/consent/consent-wrapper-onetrust
    secrets: inherit
